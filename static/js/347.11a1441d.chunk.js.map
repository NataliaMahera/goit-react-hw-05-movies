{"version":3,"file":"static/js/347.11a1441d.chunk.js","mappings":"wQACA,EAA4B,0BAA5B,EAA6D,qB,SCoD7D,EA9CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAuBtB,OArBAG,EAAAA,EAAAA,YAAU,WACR,GAAKhB,EAAL,CAEA,IAAMiB,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGR,OAHQF,EAAAC,KAAA,EAEvBZ,GAAW,GACXI,EAAS,MAAMO,EAAAE,KAAA,GAETC,EAAAA,EAAAA,IAAazB,GAAS0B,MAAK,SAAApB,GAC/BC,EAAiBD,EACnB,IAAG,KAAD,EAAAgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEFP,EAASD,GACTc,EAAAA,OAAAA,QAAe,+BAA+B,QAE5B,OAF4BN,EAAAC,KAAA,GAE9CZ,GAAW,GAAOW,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAT,EAAA,wBAErB,kBAduB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAexBf,GAjBoB,CAkBtB,GAAG,CAACH,EAAOd,KAGTiC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,CAC3B1B,IAAW2B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACO,IAAzBhC,EAAciC,QACbF,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAASC,SACrB9B,EAAckC,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OACvCX,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKM,KACLL,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,MAFGC,EAGJ,OAITP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+CAIX,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Review.module.css?8c12","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Review_container__iM2eM\",\"list\":\"Review_list__twS+N\"};","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'servises/themoviedbAPI';\nimport { Notify } from 'notiflix';\nimport css from './Review.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewDetails, setReviewDetails] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchAuthorReviews = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        await fetchReviews(movieId).then(reviewDetails => {\n          setReviewDetails(reviewDetails);\n        });\n      } catch {\n        setError(error);\n        Notify.failure('Oops, something went wrong!');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAuthorReviews();\n  }, [error, movieId]);\n\n  return (\n    <div className={css.container}>\n      {loading && <Loader />}\n      {reviewDetails.length !== 0 ? (\n        <ul className={css.list}>\n          {reviewDetails.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviewDetails","setReviewDetails","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchAuthorReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchReviews","then","t0","Notify","finish","stop","apply","arguments","_jsxs","className","css","children","_jsx","Loader","length","map","_ref2","author","content","id"],"sourceRoot":""}